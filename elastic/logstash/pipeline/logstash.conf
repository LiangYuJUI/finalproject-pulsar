input {
  pulsar {
    service_url => "pulsar://localhost:6650"
    subscription_name => "sub1"
    topics => [ 
      "persistent://np01/api-v2-charging-start/info",
      "persistent://np01/api-v2-charging-stop/info",
      "persistent://np01/api-v2-charging-set-current/info",
      "persistent://np01/api-v2-charging-start/error",
      "persistent://np01/api-v2-charging-stop/error",
      "persistent://np01/api-v2-charging-set-current/error",

      "persistent://np03/api-v2-charging-start/info",
      "persistent://np03/api-v2-charging-stop/info",
      "persistent://np03/api-v2-charging-set-current/info",
      "persistent://np03/api-v2-charging-start/error",
      "persistent://np03/api-v2-charging-stop/error",
      "persistent://np03/api-v2-charging-set-current/error",

      "persistent://np04/api-v2-charging-start/info",
      "persistent://np04/api-v2-charging-stop/info",
      "persistent://np04/api-v2-charging-set-current/info",
      "persistent://np04/api-v2-charging-start/error",
      "persistent://np04/api-v2-charging-stop/error",
      "persistent://np04/api-v2-charging-set-current/error"
    ]
    subscription_type => "Failover"
  }
}

filter {
  json {
    source => "message"
    target => "parsed_message"
  }

  mutate {
    remove_field => [ "message" ]
  }

  if [parsed_json][current] {
    mutate {
      rename => {
        "[parsed_message][np_system_id]" => "np_system_id"
        "[parsed_message][station_id]" => "station_id"
        "[parsed_message][timestamp]" => "timestamp"
        "[parsed_message][logs_from]" => "logs_from"
        "[parsed_message][function]" => "function"
        "[parsed_current][current]" => "current"
        "[parsed_message][level]" => "level"
        "[parsed_message][charger_id]" => "charger_id"
        "[parsed_message][api_response]" => "api_response"
        "[parsed_message][namespace]" => "namespace"
      }
    }
  } else {
    mutate {
      rename => {
        "[parsed_message][np_system_id]" => "np_system_id"
        "[parsed_message][station_id]" => "station_id"
        "[parsed_message][timestamp]" => "timestamp"
        "[parsed_message][logs_from]" => "logs_from"
        "[parsed_message][function]" => "function"
        "[parsed_message][level]" => "level"
        "[parsed_message][charger_id]" => "charger_id"
        "[parsed_message][api_response]" => "api_response"
        "[parsed_message][namespace]" => "namespace"
      }
    }
  }

  mutate {
    remove_field => [ "parsed_message" ]
  }
}


output {
  elasticsearch {
   hosts => ["http://localhost:9200"]
   index => "test-%{[np_system_id]}-%{[namespace]}-%{+YYYY.MM}"
  #  api_key => "Apikey R21uTUdJOEJvLUoybndRYkl0czQ6TUJRRUZSVmFSX09PVmg3bEdiZWxwUQ=="
  #  user => "elastic"
  #  password => "neopower83515567"
  #  ssl => true
  #  cacert => "/usr/share/logstash/pipeline/ca/ca.crt"
  #  ssl_certificate_verification => false
  }
  stdout { codec => rubydebug }
}